name: 'Terragrunt CI/CD'

on:
  push:
    paths:
    - 'terraform/deployments/**'
    branches:
    - main
  pull_request:
    paths:
    - 'terraform/deployments/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'
        options:
        - apply
        - destroy

jobs:
  terragrunt:
    name: 'Terragrunt Plan and Apply/Destroy'
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.11 # Specify your desired Terraform version

    - name: 'Install Terragrunt'
      run: |
        wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.36.0/terragrunt_linux_amd64
        chmod +x terragrunt_linux_amd64
        sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

    - name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: 'Set up gcloud CLI'
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: 'Determine Changed Directories'
      id: changes
      run: |
        MODIFIED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'terraform/deployments/.*\.tf$' | sed 's|/[^/]*$||' | uniq)
        echo "::set-output name=modified_dirs::$MODIFIED_DIRS"

        DELETED_DIRS=$(git diff --name-status ${{ github.event.before }} ${{ github.sha }} | grep '^D' | grep 'terraform/deployments/.*\.tf$' | sed 's|D\s*||' | sed 's|/[^/]*$||' | uniq)
        echo "::set-output name=deleted_dirs::$DELETED_DIRS"

    - name: 'Terragrunt Plan'
      run: |
        for dir in ${{ steps.changes.outputs.modified_dirs }}; do
          (
            cd $dir
            terragrunt plan -out=tfplan
          )
        done
      shell: bash

    - name: 'Create Plan Approval Request'
      uses: actions/github-script@v4
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      with:
        github-token: ${{ secrets.GH_PAT }}
        script: |
          const modifiedDirs = '${{ steps.changes.outputs.modified_dirs }}'.split(' ');
          const deletedDirs = '${{ steps.changes.outputs.deleted_dirs }}'.split(' ');

          if (modifiedDirs.length > 0 || deletedDirs.length > 0) {
            await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Terragrunt Plan Approval Request',
              body: `Terragrunt plans are ready for review.\n\n**Modified Directories:**\n${modifiedDirs.join('\n')}\n\n**Deleted Directories:**\n${deletedDirs.join('\n')}\n\nApprove this issue to proceed with \`terragrunt apply\` or \`terragrunt destroy\`.`,
              labels: ['terragrunt', 'approval']
            });
          }

  terragrunt_apply:
    name: 'Terragrunt Apply'
    needs: terragrunt
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'apply'
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v2

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.11

    - name: 'Install Terragrunt'
      run: |
        wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.36.0/terragrunt_linux_amd64
        chmod +x terragrunt_linux_amd64
        sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

    - name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: 'Set up gcloud CLI'
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: 'Run Terragrunt Apply'
      run: |
        for dir in ${{ steps.changes.outputs.modified_dirs }}; do
          (
            cd $dir
            terragrunt apply -auto-approve tfplan
          )
        done
      shell: bash

  terragrunt_destroy:
    name: 'Terragrunt Destroy'
    needs: terragrunt
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'destroy'
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v2

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.11

    - name: 'Install Terragrunt'
      run: |
        wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.36.0/terragrunt_linux_amd64
        chmod +x terragrunt_linux_amd64
        sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

    - name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: 'Set up gcloud CLI'
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: 'Run Terragrunt Destroy'
      run: |
        for dir in ${{ steps.changes.outputs.deleted_dirs }}; do
          (
            cd $dir
            terragrunt destroy -auto-approve
          )
        done
      shell: bash
